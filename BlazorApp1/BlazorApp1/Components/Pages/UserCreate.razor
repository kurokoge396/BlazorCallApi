@page "/user-create"
@using BlazorApp1.Shared.Models
@inject BlazorApp1.APIClient.IAPIClient IApiClient
@rendermode InteractiveServer

<h3>ユーザー作成</h3>

<EditForm Model="@user" OnValidSubmit="@CreateUser" FormName="UserCreateForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">ID</label>
        <InputText class="form-control" @bind-Value="user.Id" />
    </div>

    <div class="mb-3">
        <label class="form-label">名前</label>
        <InputText class="form-control" @bind-Value="user.Name" />
    </div>

    <div class="mb-3">
        <label class="form-label">パスワード</label>
        <InputText type="password" class="form-control" @bind-Value="user.Password" />
    </div>

    <div class="mb-3">
        <label class="form-label">メールアドレス</label>
        <InputText type="email" class="form-control" @bind-Value="user.Email" />
    </div>

    <button type="submit" class="btn btn-primary">登録</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}

@code {
    private User user = new User();
    private string message = string.Empty;

    private async Task CreateUser()
    {
        try
        {
            if (await IApiClient.CreateUser(user))
            {
                message = "ユーザー登録が完了しました。";
                user = new(); // 入力欄をリセット
            }
            else
            {
                message = "エラー：問い合わせ";
            }
        }
        catch (Exception ex)
        {
            message = $"エラー: {ex.Message}";
        }
    }
}
